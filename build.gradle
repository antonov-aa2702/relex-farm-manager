plugins {
    id 'java'

    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'

    id "io.freefair.lombok" version "8.6"
}

group = 'ru.relex.backend'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    lombokMapstructBindingVersion = '0.2.0'
    jjwtVersion = '0.12.5'
    postgresqlVersion = '42.6.1'
    lombokVersion = '1.18.30'
    mapstructVersion = '1.5.5.Final'
    prelequibaseVersion = '1.5.0'
    liquibaseVersion = '4.26.0'
    hibernateVersion = '6.4.4.Final'
    queryDslVersion = '5.0.0'
    jakartaPersistenceVersion = '3.1.0'
    springdocVersion = '2.0.3'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    implementation "net.lbruun.springboot:preliquibase-spring-boot-starter:${prelequibaseVersion}"
    implementation "org.liquibase:liquibase-core:${liquibaseVersion}"
    runtimeOnly "org.postgresql:postgresql:${postgresqlVersion}"
    annotationProcessor "org.hibernate.orm:hibernate-jpamodelgen:${hibernateVersion}"

    implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:${jakartaPersistenceVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"

    implementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.testcontainers:postgresql"
    testImplementation "org.testcontainers:junit-jupiter"
}

tasks.named('test') {
    useJUnitPlatform()
}
