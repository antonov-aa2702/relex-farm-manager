package ru.relex.backend.service;

/**
 * Интерфейс для предоставления методов по генерации ежедневных отчетов.
 */
public interface DailyGeneratorReportService {

    /**
     * Генерирует ежедневный отчет о произведенных продуктах.
     * Запускается ежедневно вечером каждого дня. В качестве данных
     * выбираются все собранные продукты за сегодняшний день и фактически
     * собранное количество каждого продукта.
     * <p>
     * Метод необходим для предоставления данных в CSV формате, которые
     * будут отправляться на электронную почту владельца фермы.
     */
    void generateDailyProductReport();

    /**
     * Генерирует ежедневный аналитический отчет на основании выданных рабочих норм.
     * Запускается ежедневно вечером каждого дня. В качестве данных
     * выбираются рабочие нормы за сегодняшний день и
     * для каждой из них вычисляется эффективность выполнения.
     * <p>
     * Метод необходим для предоставления данных в CSV формате, которые
     * будут отправляться на электронную почту владельца фермы.
     */
    void generateDailyAnalyticReport();


    /**
     * Генерирует ежедневный отчет об эффективности всех сотрудников на ферме.
     * Запускается ежедневно вечером каждого дня. В качестве данных
     * выбираются рабочие нормы за сегодняшний день и
     * для каждой из них вычисляется эффективность выполнения.
     * Далее, на основании этих данных для каждого сотрудника вычисляется коэффициент выработки
     * рабочей нормы и на основании этих данных вычисляется общая эффективность работы конкретного сотрудника.
     * <p>
     * Метод необходим для предоставления данных в CSV формате, которые
     * будут отправляться на электронную почту владельца фермы.
     */
    void generateDailyAnalyticEmployeesReport();

    /**
     * Генерирует ежедневный отчет об эффективности для каждого сотрудника на ферме.
     * Запускается ежедневно вечером каждого дня. В качестве данных
     * выбираются рабочие нормы за сегодняшний день и
     * для каждой из них вычисляется эффективность выполнения.
     * Далее, на основании этих данных для каждого сотрудника вычисляется коэффициент выработки
     * рабочей нормы и на основании этих данных вычисляется общая эффективность работы конкретного сотрудника.
     * <p>
     * Метод необходим для предоставления данных в CSV формате, которые
     * будут отправляться на электронную почту каждого сотрудника.
     */
    void generateDailyEmployeeScoreReport();

}
